{"ast":null,"code":"import _defineProperty from \"/Users/vishal/Desktop/Web development/VD_ScoreBoard/scorecard/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { BALL_CLICK, BALL_SET, BALL_CLOSE, BALLTYPE_CHANGE, RUNTYPE_CHANGE, RUNS_CHANGE, REQUEST_BALLS_PENDING, REQUEST_BALLS_SUCCESS, REQUEST_BALLS_FAILED } from './constants';\nimport update from 'react-addons-update';\nconst initialState = {\n  isPending: false,\n  error: '',\n  balls: [],\n  show: false,\n  score: 0,\n  wks: 0,\n  currentBall: 0,\n  lastRT: 0,\n  lastBT: 0,\n  LastRun: 0,\n  lastBD: ''\n};\nexport const setBalls = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_BALLS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_BALLS_SUCCESS:\n      return _objectSpread({}, state, {\n        ispending: false,\n        currentBall: 0,\n        balls: action.payload\n      });\n\n    case REQUEST_BALLS_FAILED:\n      return Object.assign({}, state, {\n        isPending: false,\n        error: action.payload\n      });\n\n    case BALL_CLICK:\n      {\n        var curBall = state.balls[parseInt(action.event) - 1];\n        return update(state, {\n          balls: {\n            [parseInt(action.event) - 1]: {\n              balldisplay: {\n                $set: state.lastBD\n              },\n              runs: {\n                $set: state.LastRun\n              },\n              balltype: {\n                $set: state.lastBT\n              },\n              runtype: {\n                $set: state.lastRT\n              }\n            }\n          },\n          show: {\n            $set: action.payload\n          },\n          currentBall: {\n            $set: parseInt(action.event) - 1\n          },\n          score: {\n            $set: parseInt(state.score) - state.balls[parseInt(action.event) - 1].runs\n          },\n          wks: {\n            $set: parseInt(state.wks) - state.balls[parseInt(action.event) - 1].runtype === 3 ? 1 : 0\n          }\n        });\n      }\n\n    case BALLTYPE_CHANGE:\n      {\n        const curBall = state.balls[state.currentBall];\n        return update(state, {\n          balls: {\n            [state.currentBall]: {\n              balltype: {\n                $set: action.payload\n              }\n            }\n          }\n        });\n        /*return {...state, balls:{\n        \t\t\t...state.balls,[state.currentBall]:{\n        \t\t\t\t...curBall,\n        \t\t\t\tballtype:action.payload\t\n        \t\t\t\t}\n        \t\t\t}\n        \t\t}*/\n      }\n\n    case RUNTYPE_CHANGE:\n      {\n        const curBall = state.balls[state.currentBall];\n        return update(state, {\n          balls: {\n            [state.currentBall]: {\n              runtype: {\n                $set: action.payload\n              }\n            }\n          }\n        });\n      }\n\n    case RUNS_CHANGE:\n      {\n        const curBall = state.balls[state.currentBall];\n        return update(state, {\n          balls: {\n            [state.currentBall]: {\n              runs: {\n                $set: action.payload\n              }\n            }\n          }\n        });\n      }\n\n    case BALL_CLOSE:\n      {\n        return Object.assign({}, state, {\n          show: action.payload,\n          score: parseInt(state.score) + state.balls[parseInt(state.currentBall)].runs,\n          wks: parseInt(state.wks) + state.balls[parseInt(state.currentBall)].runtype === 3 ? 1 : 0\n        });\n      }\n\n    case BALL_SET:\n      {\n        var ballDisp = \"\";\n        var wks = state.wks;\n        var score = state.score;\n        const curBall = state.balls[state.currentBall];\n\n        switch (curBall.balltype) {\n          case \"0\":\n            ballDisp = curBall.runs + \"\";\n            break;\n\n          case \"1\":\n            ballDisp = curBall.runs + \"NB\";\n            break;\n\n          case \"2\":\n            ballDisp = curBall.runs + 'WD';\n            break;\n\n          default:\n            ballDisp = curBall.runs + '';\n            break;\n        }\n\n        switch (curBall.runtype) {\n          case \"0\":\n            ballDisp = ballDisp + '';\n            break;\n\n          case \"1\":\n            ballDisp = ballDisp + 'B';\n            break;\n\n          case \"2\":\n            ballDisp = ballDisp + 'LB';\n            break;\n\n          case \"3\":\n            {\n              ballDisp = ballDisp + 'WK';\n              wks = parseInt(state.wks) + 1;\n            }\n            break;\n\n          default:\n            ballDisp = ballDisp + '';\n            break;\n        } //return Object.assign({},state, {ballDisplay:ballDisp, show:false});\n\n\n        console.log('reduce', curBall);\n        return update(state, {\n          balls: {\n            [state.currentBall]: {\n              balldisplay: {\n                $set: ballDisp\n              }\n            }\n          },\n          score: {\n            $set: parseInt(curBall.runs) + parseInt(state.score)\n          },\n          wks: {\n            $set: wks\n          },\n          lastBT: {\n            $set: curBall.balltype\n          },\n          lastRT: {\n            $set: curBall.runtype\n          },\n          LastRun: {\n            $set: curBall.runs\n          },\n          show: {\n            $set: false\n          }\n        }); //return Object.assign({},state, {show:false ,runs:parseInt(state.runs)+parseInt(state.runsConceeded)});\n      }\n\n    default:\n      return initialState;\n      break;\n  }\n};","map":{"version":3,"sources":["/Users/vishal/Desktop/Web development/VD_ScoreBoard/scorecard/src/reducers.js"],"names":["BALL_CLICK","BALL_SET","BALL_CLOSE","BALLTYPE_CHANGE","RUNTYPE_CHANGE","RUNS_CHANGE","REQUEST_BALLS_PENDING","REQUEST_BALLS_SUCCESS","REQUEST_BALLS_FAILED","update","initialState","isPending","error","balls","show","score","wks","currentBall","lastRT","lastBT","LastRun","lastBD","setBalls","state","action","type","Object","assign","ispending","payload","curBall","parseInt","event","balldisplay","$set","runs","balltype","runtype","ballDisp","console","log"],"mappings":"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","sourcesContent":["import {BALL_CLICK, BALL_SET, BALL_CLOSE, \n\tBALLTYPE_CHANGE, RUNTYPE_CHANGE, RUNS_CHANGE,\n\tREQUEST_BALLS_PENDING,REQUEST_BALLS_SUCCESS,REQUEST_BALLS_FAILED\n} from './constants'\n\nimport update from 'react-addons-update';\n\n\nconst initialState ={\n\tisPending : false,\n\terror : '',\n\tballs : [],\n\tshow:false,\n\tscore:0,\n\twks:0,\n\tcurrentBall:0,\n\tlastRT:0,\n\tlastBT:0,\n\tLastRun:0,\n\tlastBD:''\n}\n\nexport const setBalls=(state =initialState, action = {})=>{\n\tswitch(action.type){\n\t\tcase REQUEST_BALLS_PENDING:\n\t\treturn Object.assign({},state, {isPending:true});\n\n\t\tcase REQUEST_BALLS_SUCCESS:\t \n\t\treturn {...state, ispending:false, currentBall:0, balls:action.payload};\n\n\t\tcase REQUEST_BALLS_FAILED:\t \n\t\treturn Object.assign({},state, {isPending:false, error : action.payload});\n\n\t\tcase BALL_CLICK:\n\t\t{\n\t\t\tvar curBall=state.balls[parseInt(action.event)-1]\n\t\t\treturn update(state, \n\t\t\t\t{\n\t\t\t\t\tballs:{\n\t\t\t\t\t[parseInt(action.event)-1]:{\t\n\t\t\t\t\t\tballdisplay:{$set:state.lastBD},\n\t\t\t\t\t\truns:{$set:state.LastRun},\t\n\t\t\t\t\t\tballtype:{$set:state.lastBT},\n\t\t\t\t\t\truntype:{$set:state.lastRT}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tshow:{$set:action.payload}, currentBall:{$set:parseInt(action.event)-1},\n\t\t\t\t\tscore:{$set:parseInt(state.score)- state.balls[parseInt(action.event)-1].runs},\n\t\t\t\t\twks:{$set:parseInt(state.wks)- state.balls[parseInt(action.event)-1].runtype===3?1:0}\n\t\t\t});\n\t}\n\n\t\tcase BALLTYPE_CHANGE:\n\t\t{\n\t\t\tconst curBall = state.balls[state.currentBall];\n\t\t\treturn update(state, \n\t\t\t\t{\n\t\t\t\t\tballs:{\n\t\t\t\t\t[state.currentBall]:{\t\n\t\t\t\t\t\tballtype:{$set:action.payload}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\n\t\t/*return {...state, balls:{\n\t\t\t\t\t...state.balls,[state.currentBall]:{\n\t\t\t\t\t\t...curBall,\n\t\t\t\t\t\tballtype:action.payload\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}*/\n\t\t\t}\n\t\tcase RUNTYPE_CHANGE:\n\t\t{\n\t\t\tconst curBall = state.balls[state.currentBall];\n\n\t\treturn update(state, \n\t\t\t\t{\n\t\t\t\t\tballs:{\n\t\t\t\t\t[state.currentBall]:{\t\n\t\t\t\t\t\truntype:{$set:action.payload}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t}\n\n\t\tcase RUNS_CHANGE:\n\t\t{\n\t\t\tconst curBall = state.balls[state.currentBall];\n\n\t\treturn update(state, \n\t\t\t\t{\n\t\t\t\t\tballs:{\n\t\t\t\t\t[state.currentBall]:{\t\n\t\t\t\t\t\truns:{$set:action.payload}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tcase BALL_CLOSE:\n\t\t{\n\t\treturn Object.assign({},state, {show:action.payload\n\t\t,score:parseInt(state.score)+state.balls[parseInt(state.currentBall)].runs,\n\t\twks:parseInt(state.wks)+state.balls[parseInt(state.currentBall)].runtype===3?1:0\n\t});\n\t}\n\n\t\tcase BALL_SET:\n\t\t{\t\n\t\t\tvar ballDisp = \"\";\n\t\t\tvar wks=state.wks;\n\t\t\tvar score= state.score;\n\n\n\t\t\tconst curBall = state.balls[state.currentBall];\n\n\t\t\tswitch(curBall.balltype){\n\t\t\t\tcase \"0\":\n\t\t\t\tballDisp= curBall.runs+\"\";\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"1\":\n\t\t\t\tballDisp= curBall.runs+\"NB\";\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"2\":\n\t\t\t\tballDisp= curBall.runs+'WD';\n\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\t\t\t\tballDisp= curBall.runs+'';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch(curBall.runtype){\n\t\t\t\tcase \"0\":\n\t\t\t\tballDisp= ballDisp+'';\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"1\":\n\t\t\t\tballDisp= ballDisp+'B';\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"2\":\n\t\t\t\tballDisp= ballDisp+'LB';\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"3\":\n\t\t\t\t{\n\t\t\t\t\tballDisp= ballDisp+'WK';\n\t\t\t\t\twks = parseInt(state.wks)+1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\t\t\t\tballDisp= ballDisp+'';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\t\n\t\t\t//return Object.assign({},state, {ballDisplay:ballDisp, show:false});\n\t\t\t\n\t\t\tconsole.log('reduce',curBall);\n\t\t\treturn update(state, \n\t\t\t\t{\n\t\t\t\t\tballs:{\n\t\t\t\t\t[state.currentBall]:{\t\n\t\t\t\t\t\tballdisplay:{$set:ballDisp}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tscore:{$set:parseInt(curBall.runs)+parseInt(state.score)},\n\t\t\t\t\twks:{$set:wks},\n\t\t\t\t\tlastBT:{$set:curBall.balltype},\n\t\t\t\t\tlastRT:{$set:curBall.runtype},\n\t\t\t\t\tLastRun:{$set:curBall.runs}\n\t\t\t\t,show:{$set:false}});\n\t\t\t//return Object.assign({},state, {show:false ,runs:parseInt(state.runs)+parseInt(state.runsConceeded)});\n\t\t}\n\t\tdefault:\n\t\treturn initialState;\n\t\tbreak;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}