{"ast":null,"code":"var _jsxFileName = \"/Users/vishal/Desktop/Web development/VD_ScoreBoard/scorecard/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport 'tachyons';\nimport { connect } from 'react-redux';\nimport Scroll from './components/Scroll/Scroll';\nimport DialogBox from './components/DialogBox/DialogBox';\nimport Ball from './components/Ball/Ball';\nimport { ballClick, ballTypeChange, ballClose, ballSet, runTypeChange, runsChange, requestBalls } from './actions';\n\nconst mapStateToProps = state => {\n  return {\n    isPending: state.isPending,\n    error: state.error,\n    balls: state.balls,\n    show: state.show,\n    score: state.score,\n    wks: state.wks,\n    currentBall: state.currentBall,\n    nextBall: state.nextBall\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onBallClick: () => dispatch(ballClick(true)),\n    onBallTypeChange: event => dispatch(ballTypeChange(event.target.value)),\n    onRunTypeChange: event => dispatch(runTypeChange(event.target.value)),\n    onRunsChange: event => dispatch(runsChange(event.target.value)),\n    onBallSet: event => dispatch(ballSet(event.target.value)),\n    onBallClose: () => dispatch(ballClose(false)),\n    onRequestBalls: () => requestBalls(dispatch)\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    /* \n    this.state = {\n       columnDefs: [\n           {headerName: 'Match Id', field: 'matchid'},\n           {headerName: 'Match Name', field: 'matchname'},\n           {headerName: 'Team1', field: 'team1'},\n           {headerName: 'Team2', field: 'team2'},\n           {headerName: 'Overs', field: 'overs'}\n        ],\n       rowData: [],\n       balls:[]\n    }\n    */\n  }\n\n  componentDidMount() {\n    /*fetch('http://localhost:3000', ).then(\n      res => res.json()).then(data =>{\n         this.state.rowData = data.slice();\n         this.setState(this.state);\n      })*/\n    this.props.onRequestBalls();\n  }\n\n  render() {\n    console.log(this.props);\n    const _this$props = this.props,\n          show = _this$props.show,\n          onBallClick = _this$props.onBallClick,\n          onBallTypeChange = _this$props.onBallTypeChange,\n          onBallClose = _this$props.onBallClose,\n          onBallSet = _this$props.onBallSet,\n          onRunTypeChange = _this$props.onRunTypeChange,\n          onRunsChange = _this$props.onRunsChange,\n          onBallContinue = _this$props.onBallContinue,\n          balls = _this$props.balls;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"tc bg-washed-green pa1 br4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, 'Unity vs Royal'), React.createElement(\"h2\", {\n      className: \"tc bg-washed-yellow pa1 br4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, 'Unity ' + runs + '/' + wk, \" \"), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, balls.map((ball, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"dib grow br2 pa2 ma2 bw2 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Ball, {\n        key: ball.ballid,\n        onClick: onBallClick,\n        ballDisplay: ball.balldisplay,\n        show: ball.visible,\n        ballId: ball.ballid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }), React.createElement(DialogBox, {\n      show: show,\n      close: onBallClose,\n      ballChange: onBallTypeChange,\n      rtChange: onRunTypeChange,\n      runChange: onRunsChange,\n      continue: onBallSet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/vishal/Desktop/Web development/VD_ScoreBoard/scorecard/src/App.js"],"names":["React","Component","AgGridReact","connect","Scroll","DialogBox","Ball","ballClick","ballTypeChange","ballClose","ballSet","runTypeChange","runsChange","requestBalls","mapStateToProps","state","isPending","error","balls","show","score","wks","currentBall","nextBall","mapDispatchToProps","dispatch","onBallClick","onBallTypeChange","event","target","value","onRunTypeChange","onRunsChange","onBallSet","onBallClose","onRequestBalls","App","constructor","props","componentDidMount","render","console","log","onBallContinue","runs","wk","map","ball","i","ballid","balldisplay","visible"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport 'tachyons';\nimport {connect} from 'react-redux'\n\nimport Scroll from './components/Scroll/Scroll'\nimport DialogBox from './components/DialogBox/DialogBox'\nimport Ball from './components/Ball/Ball'\n\nimport {ballClick, ballTypeChange,ballClose, ballSet, runTypeChange,runsChange,requestBalls} \nfrom './actions'\n\nconst mapStateToProps=(state)=>{\n  return  {\n    isPending : state.isPending,\n    error : state.error,\n    balls : state.balls,\n    show:state.show,\n    score:state.score,\n    wks:state.wks,\n    currentBall:state.currentBall,\n    nextBall:state.nextBall\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return {\n    onBallClick:()=>dispatch(ballClick(true)),\n    onBallTypeChange:(event)=>dispatch(ballTypeChange(event.target.value)),\n    onRunTypeChange:(event)=>dispatch(runTypeChange(event.target.value)),\n    onRunsChange:(event)=>dispatch(runsChange(event.target.value)),\n    onBallSet:(event)=>dispatch(ballSet(event.target.value)),\n    onBallClose:()=>dispatch(ballClose(false)),\n    onRequestBalls:()=>requestBalls(dispatch)\n  }\n}\nclass App extends Component{\n  constructor(props) {\n        super(props);\n         /* \n        this.state = {\n            columnDefs: [\n                {headerName: 'Match Id', field: 'matchid'},\n                {headerName: 'Match Name', field: 'matchname'},\n                {headerName: 'Team1', field: 'team1'},\n                {headerName: 'Team2', field: 'team2'},\n                {headerName: 'Overs', field: 'overs'}\n\n            ],\n            rowData: [],\n            balls:[]\n        }\n        */\n    }\n\ncomponentDidMount() {\n    /*fetch('http://localhost:3000', ).then(\n      res => res.json()).then(data =>{\n         this.state.rowData = data.slice();\n         this.setState(this.state);\n      })*/\n\n\n      this.props.onRequestBalls();\n  }    \n\n   render(){ \n    console.log(this.props);\n    const {show, onBallClick,onBallTypeChange, onBallClose, onBallSet, onRunTypeChange, onRunsChange, onBallContinue, balls} = this.props;\n    return (\n      <div> \n        <h2 className='tc bg-washed-green pa1 br4'>{'Unity vs Royal'}</h2>\n        <h2 className='tc bg-washed-yellow pa1 br4'>{'Unity '+runs+'/'+wk} </h2>\n        <Scroll >\n        {\n          balls.map((ball, i)=>{\n            return (\n              <div key={i } className=\"dib grow br2 pa2 ma2 bw2 \" >\n                <Ball key={ball.ballid} onClick={onBallClick} ballDisplay={ball.balldisplay} show={ball.visible} ballId={ball.ballid}/> \n              </div>\n            );\n          })\n      }\n        <DialogBox show = {show} close={onBallClose} ballChange = {onBallTypeChange} rtChange = {onRunTypeChange}\n          runChange = {onRunsChange} continue = {onBallSet}/>\n        {\n          /*\n          <div className=\"ag-theme-balham pa3\"\n                style={{height: '600px', width:'1000px', justifyContent:'center'}} >\n            <AgGridReact  \n                enableSorting={true}\n                enableFilter={true}\n                columnDefs={this.state.columnDefs}\n                rowData={this.state.rowData}>\n            </AgGridReact>\n          </div>*/\n        }\n        </Scroll>\n      </div>\n  );\n}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}