{"ast":null,"code":"var _jsxFileName = \"/Users/vishal/Desktop/Web development/VD_ScoreBoard/scorecard/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport 'tachyons';\nimport { connect } from 'react-redux';\nimport Scroll from './components/Scroll/Scroll';\nimport DialogBox from './components/DialogBox/DialogBox';\nimport Ball from './components/Ball/Ball';\nimport { setBall, setBallClose, setBallChange, setRTchange, setRunChange, setBallContinue, requestBalls } from './actions';\n\nconst mapStateToProps = state => {\n  return {\n    runsConceeded: state.setBall.runsConceeded,\n    ballType: state.setBall.ballType,\n    runType: state.setBall.runType,\n    ballDisplay: state.setBall.ballDisplay,\n    show: state.setBall.show,\n    balls: state.requestBalls.balls,\n    isPending: state.requestBalls.isPending,\n    error: state.requestBalls.error,\n    ballId: state.setBall.ballId,\n    runs: state.setBall.runs,\n    wk: state.setBall.wk\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetBall: event => dispatch(setBall(true)),\n    onBallClose: () => dispatch(setBallClose(false)),\n    onBallChange: event => dispatch(setBallChange(event.target.value)),\n    onRTChange: event => dispatch(setRTchange(event.target.value)),\n    onRunChange: event => dispatch(setRunChange(event.target.value)),\n    onBallContinue: event => dispatch(setBallContinue(event.target.value)),\n    onRequestBalls: () => requestBalls(dispatch)\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    /* \n    this.state = {\n       columnDefs: [\n           {headerName: 'Match Id', field: 'matchid'},\n           {headerName: 'Match Name', field: 'matchname'},\n           {headerName: 'Team1', field: 'team1'},\n           {headerName: 'Team2', field: 'team2'},\n           {headerName: 'Overs', field: 'overs'}\n        ],\n       rowData: [],\n       balls:[]\n    }\n    */\n  }\n\n  componentDidMount() {\n    /*fetch('http://localhost:3000', ).then(\n      res => res.json()).then(data =>{\n         this.state.rowData = data.slice();\n         this.setState(this.state);\n      })*/\n    this.props.onRequestBalls();\n  }\n\n  render() {\n    console.log(this.props);\n    const _this$props = this.props,\n          show = _this$props.show,\n          onSetBall = _this$props.onSetBall,\n          onBallClose = _this$props.onBallClose,\n          onBallChange = _this$props.onBallChange,\n          onRTChange = _this$props.onRTChange,\n          onRunChange = _this$props.onRunChange,\n          onBallContinue = _this$props.onBallContinue,\n          ballDisplay = _this$props.ballDisplay,\n          balls = _this$props.balls,\n          runs = _this$props.runs,\n          wk = _this$props.wk;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"tc bg-washed-green pa1 br4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, 'Unity vs Royal'), React.createElement(\"h2\", {\n      className: \"tc bg-washed-yellow pa1 br4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, 'Unity ' + runs + '/' + wk, \" \"), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, balls.map((ball, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"dib grow br2 pa2 ma2 bw2 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Ball, {\n        key: ball.ballid,\n        onClick: onSetBall,\n        ballDisplay: balls.ballDisplay,\n        show: ball.visible,\n        ballId: ball.ballid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }), React.createElement(DialogBox, {\n      show: show,\n      close: onBallClose,\n      ballChange: onBallChange,\n      rtChange: onRTChange,\n      runChange: onRunChange,\n      continue: onBallContinue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/vishal/Desktop/Web development/VD_ScoreBoard/scorecard/src/App.js"],"names":["React","Component","AgGridReact","connect","Scroll","DialogBox","Ball","setBall","setBallClose","setBallChange","setRTchange","setRunChange","setBallContinue","requestBalls","mapStateToProps","state","runsConceeded","ballType","runType","ballDisplay","show","balls","isPending","error","ballId","runs","wk","mapDispatchToProps","dispatch","onSetBall","event","onBallClose","onBallChange","target","value","onRTChange","onRunChange","onBallContinue","onRequestBalls","App","constructor","props","componentDidMount","render","console","log","map","ball","i","ballid","visible"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport 'tachyons';\nimport {connect} from 'react-redux'\n\nimport Scroll from './components/Scroll/Scroll'\nimport DialogBox from './components/DialogBox/DialogBox'\nimport Ball from './components/Ball/Ball'\n\nimport {setBall, setBallClose, setBallChange, setRTchange,setRunChange,setBallContinue, requestBalls} \nfrom './actions'\n\n\nconst mapStateToProps=(state)=>{\n  return  {\n    runsConceeded : state.setBall.runsConceeded,\n    ballType: state.setBall.ballType,\n    runType : state.setBall.runType,\n    ballDisplay: state.setBall.ballDisplay,\n    show:state.setBall.show,\n    balls: state.requestBalls.balls,\n    isPending:state.requestBalls.isPending,\n    error:state.requestBalls.error,\n    ballId:state.setBall.ballId,\n    runs:state.setBall.runs,\n    wk:state.setBall.wk\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return {\n    onSetBall:(event)=>dispatch(setBall(true)),\n    onBallClose:()=>dispatch(setBallClose(false)),\n    onBallChange:(event)=>dispatch(setBallChange(event.target.value)),\n    onRTChange:(event)=>dispatch(setRTchange(event.target.value)),\n    onRunChange:(event)=>dispatch(setRunChange(event.target.value)),\n    onBallContinue:(event)=>dispatch(setBallContinue(event.target.value)),\n    onRequestBalls : () => requestBalls(dispatch)\n  }\n}\n\nclass App extends Component{\n  constructor(props) {\n        super(props);\n         /* \n        this.state = {\n            columnDefs: [\n                {headerName: 'Match Id', field: 'matchid'},\n                {headerName: 'Match Name', field: 'matchname'},\n                {headerName: 'Team1', field: 'team1'},\n                {headerName: 'Team2', field: 'team2'},\n                {headerName: 'Overs', field: 'overs'}\n\n            ],\n            rowData: [],\n            balls:[]\n        }\n        */\n    }\n\ncomponentDidMount() {\n    /*fetch('http://localhost:3000', ).then(\n      res => res.json()).then(data =>{\n         this.state.rowData = data.slice();\n         this.setState(this.state);\n      })*/\n\n\n      this.props.onRequestBalls();\n  }    \n\n   render(){ \n    console.log(this.props);\n    const {show, onSetBall, onBallClose, onBallChange, onRTChange, onRunChange, onBallContinue, ballDisplay, balls, runs, wk} = this.props;\n    return (\n      <div> \n        <h2 className='tc bg-washed-green pa1 br4'>{'Unity vs Royal'}</h2>\n        <h2 className='tc bg-washed-yellow pa1 br4'>{'Unity '+runs+'/'+wk} </h2>\n        <Scroll >\n        {\n          balls.map((ball, i) => {\n            \n            return (\n              <div key={i } className=\"dib grow br2 pa2 ma2 bw2 \" >\n                <Ball key={ball.ballid} onClick={onSetBall} ballDisplay={balls.ballDisplay} show={ball.visible} ballId={ball.ballid}/> \n              </div>\n            );\n          })\n        }\n        <DialogBox show = {show} close={onBallClose} ballChange = {onBallChange} rtChange = {onRTChange}\n                runChange = {onRunChange} continue = {onBallContinue}/>\n        {\n          /*\n          <div className=\"ag-theme-balham pa3\"\n                style={{height: '600px', width:'1000px', justifyContent:'center'}} >\n            <AgGridReact  \n                enableSorting={true}\n                enableFilter={true}\n                columnDefs={this.state.columnDefs}\n                rowData={this.state.rowData}>\n            </AgGridReact>\n          </div>*/\n        }\n        </Scroll>\n      </div>\n  );\n}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}