{"ast":null,"code":"import _defineProperty from \"/Users/vishal/Desktop/Web development/VD_ScoreBoard/scorecard/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { BALL_CLICK, BALL_SET, BALL_CLOSE, BALLTYPE_CHANGE, RUNTYPE_CHANGE, RUNS_CHANGE, REQUEST_BALLS_PENDING, REQUEST_BALLS_SUCCESS, REQUEST_BALLS_FAILED, MATCH_OPEN, BACK_CLICK, CREATEMATCH_CLICK } from './constants';\nimport update from 'react-addons-update';\nconst initialState = {\n  isPending: false,\n  error: '',\n  balls: [],\n  show: false,\n  score: 0,\n  wks: 0,\n  score2: 0,\n  wks2: 0,\n  currentBall: 1,\n  currentInn: 1,\n  lastRT: 0,\n  lastBT: 0,\n  LastRun: 0,\n  lastBD: '',\n  runsOnBall: 0,\n  wksOnBall: 0,\n  btOnBall: 0,\n  ballRT: 0,\n  ballBT: 0,\n  route: 'match',\n  ballRuns: 0,\n  ballBD: '',\n  match: [],\n  numOfBalls1: 0,\n  numOfBalls2: 0\n};\nexport const setBalls = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_BALLS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_BALLS_SUCCESS:\n      return _objectSpread({}, state, {\n        ispending: false,\n        route: action.route,\n        match: action.event.data,\n        currentBall: 0,\n        balls: action.payload\n      });\n\n    case REQUEST_BALLS_FAILED:\n      return Object.assign({}, state, {\n        isPending: false,\n        error: action.payload\n      });\n\n    case BALL_CLICK:\n      return _objectSpread({}, state, {\n        show: action.payload,\n        currentBall: parseInt(action.event.ballid) - 1,\n        currentInn: parseInt(action.event.inningid),\n        runsOnBall: state.balls[state.balls.findIndex(ball => parseInt(ball.ballid) === parseInt(parseInt(action.event.ballid)) && parseInt(ball.inningid) === parseInt(action.event.inningid))].runs,\n        wksOnBall: parseInt(state.balls[state.balls.findIndex(ball => parseInt(ball.ballid) === parseInt(parseInt(action.event.ballid)) && parseInt(ball.inningid) === parseInt(action.event.inningid))].runtype) === 3 ? 1 : 0,\n        btOnBall: parseInt(state.balls[state.balls.findIndex(ball => parseInt(ball.ballid) === parseInt(parseInt(action.event.ballid)) && parseInt(ball.inningid) === parseInt(action.event.inningid))].balltype)\n      });\n\n    case MATCH_OPEN:\n      return Object.assign({}, state, {\n        route: action.route,\n        match: action.event.data\n      });\n\n    case CREATEMATCH_CLICK:\n      return Object.assign({}, state, {\n        route: action.route\n      });\n\n    case BACK_CLICK:\n      return Object.assign({}, state, {\n        route: action.route\n      });\n\n    case BALLTYPE_CHANGE:\n      return _objectSpread({}, state, {\n        ballBT: action.payload\n      });\n\n    case RUNTYPE_CHANGE:\n      return _objectSpread({}, state, {\n        ballRT: action.payload\n      });\n\n    case RUNS_CHANGE:\n      return _objectSpread({}, state, {\n        ballRuns: action.payload\n      });\n\n    case BALL_CLOSE:\n      return _objectSpread({}, state, {\n        show: action.payload\n      });\n\n    case BALL_SET:\n      {\n        var wks = 0;\n        var score = 0;\n        var ballDisp = \"\";\n        var numOfBalls = 0;\n        numOfBalls = parseInt(state.currentInn) == 1 ? parseInt(state.numOfBalls1) : parseInt(state.numOfBalls2);\n        numOfBalls = state.balls[state.balls.findIndex(ball => parseInt(ball.ballid) === parseInt(parseInt(state.currentBall) + 1) && parseInt(ball.inningid) === parseInt(state.currentInn))].isset === true && parseInt(state.btOnBall) === 0 ? parseInt(numOfBalls) - 1 : parseInt(numOfBalls);\n        wks = parseInt(state.currentInn) == 1 ? parseInt(state.wks) - parseInt(state.wksOnBall) : parseInt(state.wks2) - parseInt(state.wksOnBall);\n        score = parseInt(state.currentInn) == 1 ? parseInt(state.score) + parseInt(state.ballRuns) - parseInt(state.runsOnBall) : parseInt(state.score2) + parseInt(state.ballRuns) - parseInt(state.runsOnBall);\n\n        switch (state.ballBT) {\n          case \"0\":\n            ballDisp = state.ballRuns + \"\";\n            break;\n\n          case \"1\":\n            ballDisp = state.ballRuns + \"NB\";\n            state.balls.push({\n              matchid: state.match.matchid,\n              inningid: state.currentInn,\n              ballid: state.balls.filter(ball => ball.inningid === state.currentInn).length + 1,\n              visible: true\n            });\n            break;\n\n          case \"2\":\n            ballDisp = state.ballRuns + 'WD';\n            state.balls.push({\n              matchid: state.match.matchid,\n              inningid: state.currentInn,\n              ballid: state.balls.filter(ball => ball.inningid === state.currentInn).length + 1,\n              visible: true\n            });\n            break;\n\n          default:\n            ballDisp = state.ballRuns + '';\n            break;\n        }\n\n        switch (state.ballRT) {\n          case \"0\":\n            ballDisp = ballDisp + '';\n            break;\n\n          case \"1\":\n            ballDisp = ballDisp + 'B';\n            break;\n\n          case \"2\":\n            ballDisp = ballDisp + 'LB';\n            break;\n\n          case \"3\":\n            {\n              ballDisp = ballDisp + 'WK';\n              wks = parseInt(wks) + 1;\n            }\n            break;\n\n          default:\n            ballDisp = ballDisp + '';\n            break;\n        }\n\n        if (parseInt(state.currentInn) === 1) {\n          return update(state, {\n            balls: {\n              [state.balls.findIndex(ball => parseInt(ball.ballid) === parseInt(parseInt(state.currentBall) + 1) && parseInt(ball.inningid) === parseInt(state.currentInn))]: {\n                balldisplay: {\n                  $set: ballDisp\n                },\n                balltype: {\n                  $set: state.ballBT\n                },\n                runtype: {\n                  $set: state.ballRT\n                },\n                runs: {\n                  $set: state.ballRuns\n                },\n                isset: {\n                  $set: true\n                }\n              }\n            },\n            score: {\n              $set: score\n            },\n            wks: {\n              $set: wks\n            },\n            lastBT: {\n              $set: state.ballBT\n            },\n            lastRT: {\n              $set: state.ballRT\n            },\n            LastRun: {\n              $set: state.ballRuns\n            },\n            numOfBalls1: {\n              $set: parseInt(state.ballBT) === 0 ? parseInt(state.numOfBalls1) + 1 : state.numOfBalls1\n            },\n            show: {\n              $set: false\n            }\n          });\n        } else {\n          return update(state, {\n            balls: {\n              [state.balls.findIndex(ball => parseInt(ball.ballid) === parseInt(parseInt(state.currentBall) + 1) && parseInt(ball.inningid) === parseInt(state.currentInn))]: {\n                balldisplay: {\n                  $set: ballDisp\n                },\n                balltype: {\n                  $set: state.ballBT\n                },\n                runtype: {\n                  $set: state.ballRT\n                },\n                runs: {\n                  $set: state.ballRuns\n                },\n                isset: {\n                  $set: true\n                }\n              }\n            },\n            score2: {\n              $set: score\n            },\n            wks2: {\n              $set: wks\n            },\n            lastBT: {\n              $set: state.ballBT\n            },\n            lastRT: {\n              $set: state.ballRT\n            },\n            LastRun: {\n              $set: state.ballRuns\n            },\n            numOfBalls2: {\n              $set: parseInt(state.ballBT) === 0 ? parseInt(state.numOfBalls2) + 1 : state.numOfBalls2\n            },\n            show: {\n              $set: false\n            }\n          });\n        }\n      }\n\n    default:\n      return initialState;\n      break;\n  }\n};","map":{"version":3,"sources":["/Users/vishal/Desktop/Web development/VD_ScoreBoard/scorecard/src/reducers.js"],"names":["BALL_CLICK","BALL_SET","BALL_CLOSE","BALLTYPE_CHANGE","RUNTYPE_CHANGE","RUNS_CHANGE","REQUEST_BALLS_PENDING","REQUEST_BALLS_SUCCESS","REQUEST_BALLS_FAILED","MATCH_OPEN","BACK_CLICK","CREATEMATCH_CLICK","update","initialState","isPending","error","balls","show","score","wks","score2","wks2","currentBall","currentInn","lastRT","lastBT","LastRun","lastBD","runsOnBall","wksOnBall","btOnBall","ballRT","ballBT","route","ballRuns","ballBD","match","numOfBalls1","numOfBalls2","setBalls","state","action","type","Object","assign","ispending","event","data","payload","parseInt","ballid","inningid","findIndex","ball","runs","runtype","balltype","ballDisp","numOfBalls","isset","push","matchid","filter","length","visible","balldisplay","$set"],"mappings":"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","sourcesContent":["import {BALL_CLICK, BALL_SET, BALL_CLOSE, \n\tBALLTYPE_CHANGE, RUNTYPE_CHANGE, RUNS_CHANGE,\n\tREQUEST_BALLS_PENDING,REQUEST_BALLS_SUCCESS,REQUEST_BALLS_FAILED,\n\tMATCH_OPEN,BACK_CLICK,CREATEMATCH_CLICK\n} from './constants'\n\nimport update from 'react-addons-update';\n\n\nconst initialState ={\n\tisPending : false,\n\terror : '',\n\tballs : [],\n\tshow:false,\n\tscore:0,\n\twks:0,\n\tscore2:0,\n\twks2:0,\n\tcurrentBall:1,\n\tcurrentInn:1,\n\tlastRT:0,\n\tlastBT:0,\n\tLastRun:0,\n\tlastBD:'',\n\trunsOnBall:0,\n\twksOnBall:0,\n\tbtOnBall:0,\n\tballRT:0,\n\tballBT:0,\n\troute:'match',\n\tballRuns:0,\n\tballBD:'',\n\tmatch:[],\n\tnumOfBalls1:0,\n\tnumOfBalls2:0\n}\n\nexport const setBalls=(state =initialState, action = {})=>{\n\tswitch(action.type){\n\t\tcase REQUEST_BALLS_PENDING:\n\t\treturn Object.assign({},state, {isPending:true});\n\n\t\tcase REQUEST_BALLS_SUCCESS:\t \n\t\treturn {...state, ispending:false, route:action.route, match:action.event.data,currentBall:0, balls:action.payload};\n\n\t\tcase REQUEST_BALLS_FAILED:\t \n\t\treturn Object.assign({},state, {isPending:false, error : action.payload});\n\n\t\tcase BALL_CLICK:\n\t\treturn {...state, \n\t\t\t\t\tshow:action.payload, currentBall:parseInt(action.event.ballid)-1,\n\t\t\t\t\tcurrentInn:parseInt(action.event.inningid),\n\t\t\t\t\trunsOnBall:state.balls[state.balls.findIndex((ball)=>parseInt(ball.ballid) === parseInt(parseInt(action.event.ballid)) && \n            parseInt(ball.inningid) === parseInt(action.event.inningid))].runs,\n\t\t\t\t\twksOnBall:parseInt(state.balls[state.balls.findIndex((ball)=>parseInt(ball.ballid) === parseInt(parseInt(action.event.ballid)) && \n            parseInt(ball.inningid) === parseInt(action.event.inningid))].runtype) === 3?1:0,\n\t\t\t\t\tbtOnBall:parseInt(state.balls[state.balls.findIndex((ball)=>parseInt(ball.ballid) === parseInt(parseInt(action.event.ballid)) && \n            parseInt(ball.inningid) === parseInt(action.event.inningid))].balltype)\n\t\t\t\t}\n\n\t\tcase MATCH_OPEN:\n\t\treturn Object.assign({},state, {route:action.route, match:action.event.data});\n\n\t\tcase CREATEMATCH_CLICK:\n\t\treturn Object.assign({},state, {route:action.route});\n\n\t\tcase BACK_CLICK:\n\t\treturn Object.assign({},state, {route:action.route});\n\n\t\tcase BALLTYPE_CHANGE:\n\t\t\treturn {...state, ballBT:action.payload\t}\n\t\t\t\n\t\tcase RUNTYPE_CHANGE:\n\t\treturn {...state, ballRT:action.payload }\n\n\t\tcase RUNS_CHANGE:\n\t\treturn {...state, ballRuns:action.payload }\n\n\t\tcase BALL_CLOSE:\n\t\t\treturn {...state,show:action.payload}\n\n\t\tcase BALL_SET:\n\t\t{\t\n\t\t\tvar wks = 0;\n\t\t\tvar score=0;\n\t\t\tvar ballDisp = \"\";\n\t\t\tvar numOfBalls = 0;\n\n\t\t\tnumOfBalls = parseInt(state.currentInn)==1?\n\t\t\t\t\t\t\tparseInt(state.numOfBalls1):\n\t\t\t\t\t\t\tparseInt(state.numOfBalls2);\n\n\t\t\tnumOfBalls = state.balls[state.balls.findIndex((ball)=>parseInt(ball.ballid) === parseInt(parseInt(state.currentBall)+1) && \n            parseInt(ball.inningid) === parseInt(state.currentInn))].isset === true && parseInt(state.btOnBall) === 0?parseInt(numOfBalls)-1:parseInt(numOfBalls);\n\t\t\t\n\t\t\twks = parseInt(state.currentInn)==1?\n\t\t\t\t\t\t\tparseInt(state.wks)-parseInt(state.wksOnBall):\n\t\t\t\t\t\t\tparseInt(state.wks2)-parseInt(state.wksOnBall);\n\t\t\t\n\n\t\t\tscore = parseInt(state.currentInn) == 1 ?\n\t\t\t\tparseInt(state.score)+parseInt(state.ballRuns)-parseInt(state.runsOnBall):\n\t\t\t\tparseInt(state.score2)+parseInt(state.ballRuns)-parseInt(state.runsOnBall);\n\n\t\t\tswitch(state.ballBT){\n\t\t\t\tcase \"0\":\n\t\t\t\tballDisp= state.ballRuns+\"\";\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"1\":\n\t\t\t\tballDisp= state.ballRuns+\"NB\";\n\t\t\t\tstate.balls.push({matchid:state.match.matchid, inningid:state.currentInn, \n\t\t\t\t\tballid:state.balls.filter(ball => ball.inningid === state.currentInn).length+1, visible:true});\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"2\":\n\t\t\t\tballDisp= state.ballRuns+'WD';\n\t\t\t\tstate.balls.push({matchid:state.match.matchid, inningid:state.currentInn, \n\t\t\t\t\tballid:state.balls.filter(ball => ball.inningid === state.currentInn).length+1, visible:true});\n\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\t\t\t\tballDisp= state.ballRuns+'';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch(state.ballRT){\n\t\t\t\tcase \"0\":\n\t\t\t\tballDisp= ballDisp+'';\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"1\":\n\t\t\t\tballDisp= ballDisp+'B';\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"2\":\n\t\t\t\tballDisp= ballDisp+'LB';\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"3\":\n\t\t\t\t{\n\t\t\t\t\tballDisp= ballDisp+'WK';\n\t\t\t\t\twks = parseInt(wks)+1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\t\t\t\tballDisp= ballDisp+'';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(parseInt(state.currentInn) === 1)\n\t\t\t{\n\t\t\treturn update(state, \n\t\t\t\t{\n\t\t\t\t\tballs:{\n\t\t\t\t\t[state.balls.findIndex((ball)=>parseInt(ball.ballid) === parseInt(parseInt(state.currentBall)+1) && \n            parseInt(ball.inningid) === parseInt(state.currentInn))]:{\t\n\t\t\t\t\t\tballdisplay:{$set:ballDisp},\n\t\t\t\t\t\tballtype:{$set:state.ballBT},\n\t\t\t\t\t\truntype:{$set:state.ballRT},\n\t\t\t\t\t\truns:{$set:state.ballRuns},\n\t\t\t\t\t\tisset:{$set:true}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tscore:{$set:score},\n\t\t\t\t\twks:{$set:wks},\n\t\t\t\t\tlastBT:{$set:state.ballBT},\n\t\t\t\t\tlastRT:{$set:state.ballRT},\n\t\t\t\t\tLastRun:{$set:state.ballRuns},\n\t\t\t\t\tnumOfBalls1:{$set:parseInt(state.ballBT) === 0?parseInt(state.numOfBalls1)+1:state.numOfBalls1}\n\t\t\t\t,show:{$set:false}});\n\t\t}\n\t\telse{\n\t\t\treturn update(state, \n\t\t\t\t{\n\t\t\t\t\tballs:{\n\t\t\t\t\t[state.balls.findIndex((ball)=>parseInt(ball.ballid) === parseInt(parseInt(state.currentBall)+1) && \n            parseInt(ball.inningid) === parseInt(state.currentInn))]:{\t\n\t\t\t\t\t\tballdisplay:{$set:ballDisp},\n\t\t\t\t\t\tballtype:{$set:state.ballBT},\n\t\t\t\t\t\truntype:{$set:state.ballRT},\n\t\t\t\t\t\truns:{$set:state.ballRuns},\n\t\t\t\t\t\tisset:{$set:true}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tscore2:{$set:score},\n\t\t\t\t\twks2:{$set:wks},\n\t\t\t\t\tlastBT:{$set:state.ballBT},\n\t\t\t\t\tlastRT:{$set:state.ballRT},\n\t\t\t\t\tLastRun:{$set:state.ballRuns},\n\t\t\t\t\tnumOfBalls2:{$set:parseInt(state.ballBT) === 0?parseInt(state.numOfBalls2)+1:state.numOfBalls2}\n\t\t\t\t,show:{$set:false}});\n\t\t}\n\t}\n\t\tdefault:\n\t\treturn initialState;\n\t\tbreak;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}